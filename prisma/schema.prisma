// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  profile   String
  details   String
  city      String
  cv        String
  type      String
  jobs      Job[]
  reviews   Review[]
  company   Company?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Token     Token[]
  companyId Int?
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Job {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  salary      String
  image       String
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  reviews     Review[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  company     Company? @relation(fields: [companyId], references: [id])
  companyId   Int?
}

model Review {
  id        Int      @id @unique @default(autoincrement())
  rating    Int
  comment   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  job       Job      @relation(fields: [id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  company   Company? @relation(fields: [companyId], references: [id])
  companyId Int?
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  details   String
  image     String
  city      String
  size      Int
  industry  String
  website   String
  jobs      Job[]
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}
